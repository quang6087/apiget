import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
class MyApp7 extends StatelessWidget {
  const MyApp7({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'MetarialApp',
      home: MyHomePage(),
    );
  }
}
class MyHomePage extends StatefulWidget{
  const MyHomePage({Key?key}):super(key: key);
  @override
  MyHomePageState createState() => MyHomePageState();
}
class MyHomePageState extends State<MyHomePage>{
  late Future<List<Product>> lsProduct;
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    lsProduct = Product.fetchData();
    print(lsProduct.toString());
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text("Danh sách cơ bản"),
          leading: Icon(Icons.line_style),
        ),
        body:FutureBuilder(
          future: lsProduct,
          builder: (BuildContext context, AsyncSnapshot<List<Product>> snapshot) {
            if(snapshot.hasData){
              var data = snapshot.data as List<Product>;
              print(data.length);
              return GridView.builder(
                gridDelegate: SliverGridDelegateWithMaxCrossAxisExtent(
                    maxCrossAxisExtent: 200,
                    crossAxisSpacing: 20,
                    mainAxisSpacing: 20
                ),
                itemCount: data.length,
                itemBuilder: (BuildContext context, int index) {
                  Product p = data[index];
                  return Container(
                    child: Column(
                      children: [
                        Text(p.title,maxLines: 1 ,),
                        Image.network(p.image,height: 110,width: 200,),
                        Text("Giá:" +p.price.toString(),maxLines: 1 ,),
                        ElevatedButton(onPressed: (){}, child: Text("Mua"),),
                      ],
                    ),);
                },
              );
            }else{
              return CircularProgressIndicator();
            }
          },
        )
    );
  }
}
class Product{
    final int id;
    final String title;
    final String description;
    final String image;
    final double price;
    Product({required this.id, required this.title, required this.description, required this.image, required this.price} );
    static Future<List<Product>> fetchData() async {
      String url = "https://fakestoreapi.com/products?limit=100";
      var client = http.Client();
      var reponse = await client.get(Uri.parse(url));
      if(reponse.statusCode == 200)
      {
        var result = reponse.body;
        var jsonData = jsonDecode(result);//.cast<List<Map<String,dynamic>>>();
        List<Product> l = [];
        for(var item in jsonData)
        {
          double price1 = double.parse(item['price'].toString());
          print(item['price'].toString());
          Product p = new Product(id: item['id'], title: item['title'],description: item['description'], image: item['image'],price: price1);
          l.add(p);
        }
        return l;
      }else{
        throw Exception("Lỗi lấy dữ liệu. Chi tiết: ${reponse.statusCode}");
      }
    }
}
